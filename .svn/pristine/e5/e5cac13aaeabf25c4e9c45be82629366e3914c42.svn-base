/**
 * Created by Administrator on 2017/12/5.
 */


import {getRootPath,ajaxPost,ajaxGet} from '../common/ajax';
import {ErrorMSG} from '../error/errorMsg';


const SERVER_ACTION={


};






export function getWeixinQrCode (userId,orderId,success,error){

    let serverUrl=getRootPath()+"studentCourse/"+userId+"/"+orderId+"/getOrderPayInfo";
    ajaxPost(serverUrl,{},function(data){
        success(data.retCode,data.responseInfo);
    },function(e){
        console.log("errorInfo:"+e);
        //errorCallback(e);
    })




}
export function createOrde(userId,orderData,success,error){

        let orderId="";
        getOrderId(userId,function(code,data){
                console.log(data);
                if(code==0){
                    orderId=data;
                }
        },function(e){
                console.log(e);
        },false);
   // return false;


    /**
     //1.请求ＩＤ，
     2.提交
     {
        userId:'456',
        courseId: "4011010001",课程id
        teacherId:"110000000",//发布者id
        title: "春泽课堂",
        courseAvata:"http://images.chunzeacademy.com:8080/group1/M00/00/02/J2sPS1odFRaALZtDAA1rIuRd3Es456.jpg",
        originalPrice:125,
        realPrice:10,
         totalPrice:'9.00',
         realTotalPrice:'9.00',
         courseClass:[
         {
             classId:'1_1',
             classTitle:'java环境搭建',
             videoId:1231313,//视频ＩＤ
             originalPrice:10.00,
             realPrice:'9'
         }
     ]

     }
     ***/
    console.log("提交订单生成的");
    console.log(JSON.stringify(orderData));
    orderData.orderId=orderId;
    //return ;
    //let orderId=orderData.orderId;
    let serverUrl=getRootPath()+"studentCourse/"+userId+"/"+orderId+"/submitBuyOrder";
    ajaxPost(serverUrl,orderData,function(data){
        success(data.retCode,data.responseInfo,data.retMsg);
    },function(e){
        console.log("errorInfo:"+e);
        //errorCallback(e);
    })

}

export function createNewOrder(userId,orderData,success,error){
    let orderId=(orderData.orderId)?orderData.orderId:"000000";
    let serverUrl=getRootPath()+"studentCourse/"+userId+"/"+orderId+"/submitBuyOrder";
    ajaxPost(serverUrl,orderData,function(data){
        success(data.retCode,data.responseInfo,data.retMsg);
    },function(e){
        console.log("errorInfo:"+e);
        //errorCallback(e);
    })
}


export function getOrderId(userId="default",successCallback,errorCallBack,async=true){

    let serverUrl=getRootPath()+"orderId/coursebuyer/"+userId+"/createOrderId";
    let ajaxData={jsonString:''};
    ajaxPost(serverUrl,ajaxData,function(data){
        successCallback(data.retCode,data.responseInfo);
    },function(e){
        if(errorCallBack)
            console.log("errorInfo:"+e);
        //errorCallback(e);;
    },async)
}


export function createOrderInfoByAjax(orderId,orderData,isModify,successCallback,errorCallBack,async=true){

    let userInfo=Storage.get("userInfo");
    let userId=userInfo.userId;
    let orderInfo=Commom.clone(orderData);

    /* courseInfo={
     chapterId:''//对应的章节ID
     classId://课时ID
     category:0, //课时类型
     classTitle:'',//课时标题
     classDetail:'',//课时详细
     originalPrice:'发布的原始价格',
     realPrice:'成交价格',
     owner:'用户ID'
     videoUrl:''//视频地址
     videoId:'视频ID'
     }*/

    /* chapterInfo={
     chapterId;//章节ID
     chapterTitle:'', //章节标题
     chapterInfo:'',  //章节描述
     }
     * 填加课时信息
     *  填加课时和修改课时暂时用同一节口
     *  填加课时classId为空
     *  chapterId
     *  */
    let isModifyType=(isModify)?"putContextData":"createOrder";

    let dbid=orderId.substring(orderId.length-4,orderId.length);
    let serverUrl=getRootPath()+"orderGateway/tcoursepub/"+dbid+"/"+orderId+"/"+isModifyType;
    orderInfo.realPrice=orderInfo.originalPrice;
    if(orderInfo.courseInfo.courseId=="")
    {
        orderInfo.courseInfo.courseId=orderId;
    }
    orderInfo.courseInfo.owner=userId;
    let newChapterInfo=exchangeCourseClass(orderInfo.courseClass);
    orderInfo.courseInfo.courseChapter=JSON.stringify(newChapterInfo.chapterInfo);
    //章节排序并设置课时ＩＤ
    orderInfo.courseClass=newChapterInfo.chapterList;
    let category=JSON.stringify(orderInfo.courseInfo.category);
    orderInfo.courseInfo.category=category;
    let mapObject={course:JSON.stringify(orderInfo.courseInfo),courseClass:JSON.stringify(orderInfo.courseClass)};
    let ajaxData={"orderId":orderId,"catetory":"tcoursepub","contextDatas":mapObject};


    ajaxPost(serverUrl,ajaxData,function(data){
        successCallback(data.retCode,data.responseInfo);
    },function(e){
        if(errorCallBack)
            console.log("errorInfo:"+e);
    },async)
}

